% stdout: "I am Bar, {x: 1}\nI am Foo.Bar, {x: 2}\n"

struct Foo {
	bar: Bar,
	struct Bar {
		x: int = 0,
		fn log(self: Bar) void {
			println("I am Foo.Bar", self);
		}
	}
}

struct Bar {
	x: int = 0,
	fn log(self: Bar) void {
		println("I am Bar", self);
	}
}

% creating a type alias, FooBar is the same as saying Foo.Bar
type FooBar = Foo.Bar;

fn main() void {
	let bar1: Bar = new Bar{x: 1};
	% actually Foo.Bar
	let bar2: FooBar = new FooBar{x: 2};
	bar1.log();
	bar2.log();
}
