% stdout: "0\n1\n2\n3\n4\n"
fn range(a: int, b: int) co int {
	% we can declare local functions
	% note: not a closure, doesn't capture any vars
	fn range(a: int, b: int) int {
		while(a < b) {
			yield a;
			a += 1;
		}
	}
	return create(range, a, b);
}

fn main() void {
	% coroutine objects as iterators
	% it is just a syntactic sugar over the previous example
	for (x: range(0, 5)) {
		println(x);
	}
}

